{"version":3,"sources":["ngx-stripe.umd.js"],"names":["global","factory","exports","module","require","define","amd","beatbaseaps","ngxstripe","ng","core","common","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","isFunction","x","_enable_super_gross_mode_that_will_cause_bad_things","config","Promise","undefined","useDeprecatedSynchronousErrorHandling","value","Error","stack","hostReportError","err","setTimeout","empty","closed","next","error","complete","isArray","isObject","tryCatchTarget","errorObject","e","tryCatcher","tryCatch","fn","UnsubscriptionErrorImpl","errors","message","map","toString","join","name","UnsubscriptionError","Subscription","unsubscribe","_parent","_parents","_subscriptions","_unsubscribe","hasErrors","index","len","remove","flattenUnsubscriptionErrors","sub","concat","push","add","teardown","EMPTY","subscription","_addParent","tmp","subscriptions","subscriptionIndex","indexOf","splice","parent","reduce","errs","rxSubscriber","Symbol","for","Subscriber","_super","destinationOrNext","_this","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","_parentSubscription","destination","isTrustedSubscriber","trustedSubscriber","_addParentTeardownLogic","SafeSubscriber","subscriber","_next","_error","_unsubscribeParentSubscription","_complete","parentTeardownLogic","_unsubscribeAndRecycle","_parentSubscriber","observerOrNext","context","bind","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","obj","observable","noop","Observable","subscribe","_isScalar","_subscribe","lift","operator","observable$$1","source","sink","nextOrObserver","toSubscriber","_trySubscribe","forEach","promiseCtor","getPromiseCtor","resolve","reject","pipe","fns","operations","_i","input","prev","toPromise","ObjectUnsubscribedErrorImpl","ObjectUnsubscribedError","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscriber","Subject","hasError","thrownError","AnonymousSubject","copy","slice","asObservable","refCount","RefCountOperator","connectable","_refCount","refCounter","RefCountSubscriber","connection","connect","sharedConnection","_connection","connectableProto","ConnectableObservable","subjectFactory","_isComplete","getSubject","_subject","ConnectableSubscriber","connectableObservableDescriptor","writable","BehaviorSubject","_value","defineProperty","get","getValue","enumerable","configurable","AsyncAction","scheduler","work","pending","schedule","state","delay","id","recycleAsyncId","requestAsyncId","setInterval","flush","clearInterval","execute","_execute","errored","errorValue","actions","Action","QueueAction","Scheduler","SchedulerAction","now","Date","AsyncScheduler","delegate","active","scheduled","action","shift","queue","QueueScheduler","empty$1","emptyScheduled","isScheduler","subscribeToArray","array","fromArray","of","args","result","pop","dispatch","_a","Notification","kind","hasValue","observe","observer","do","accept","toObservable","createNext","undefinedValueNotification","createError","createComplete","completeNotification","ObserveOnSubscriber","arg","notification","scheduleMessage","ObserveOnMessage","ReplaySubject","bufferSize","windowTime","Number","POSITIVE_INFINITY","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextInfiniteTimeWindow","nextTimeWindow","ReplayEvent","_getNow","_trimBufferThenGetEvents","eventsCount","spliceCount","time","Math","max","AsyncSubject","hasNext","hasCompleted","ArgumentOutOfRangeErrorImpl","ArgumentOutOfRangeError","EmptyErrorImpl","project","thisArg","TypeError","MapOperator","MapSubscriber","count","OuterSubscriber","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyError","notifyComplete","InnerSubscriber","subscribeToPromise","promise","then","iterator","getSymbolIterator","subscribeToIterable","iterable","iterator$$1","item","done","return","subscribeToObservable","obs","isArrayLike","isPromise","subscribeTo","subscribeToResult","outerSubscriber","NONE","CombineLatestOperator","resultSelector","CombineLatestSubscriber","values","observables","toRespond","unused","oldVal","_tryResultSelector","from","isInteropObservable","fromObservable","fromPromise","isIterable","fromIterable","filter","predicate","FilterOperator","FilterSubscriber","TakeOperator","total","TakeSubscriber","MulticastOperator","selector","publishLast","subjectOrSubjectFactory","SwitchMapOperator","SwitchMapSubscriber","_innerSub","innerSubscription","innerSubscriber","PlatformService","platformId","isPlatformBrowser","isPlatformServer","decorators","type","Injectable","ctorParameters","Inject","PLATFORM_ID","WindowRef","_platform","getNativeWindow","isBrowser","window","DocumentRef","getNativeDocument","document","LazyStripeAPILoader","status","loaded","loading","asStream","load","isReady","isServer","script","createElement","async","defer","src","onload","onerror","body","appendChild","isSourceData","sourceData","STRIPE_PUBLISHABLE_KEY","InjectionToken","STRIPE_OPTIONS","isBankAccount","account","isBankAccountData","bankAccountData","account_holder_type","isPii","pii","isPiiData","piiData","StripeService","key","options","loader","stripeChanged$","stripe","changeKey","Stripe","getInstance","elements","createToken","a","createSource","retrieveSource","String","StripeCardComponent","stripeService","change","EventEmitter","options$","elementsOptions$","set","optionsIn","ngOnInit","combineLatest","switchMap","ii","keys","Boolean","card","element","mount","nativeElement","on","changedCard","emit","getCard","Component","template","propDecorators","Output","ViewChild","Input","elementsOptions","NgxStripeModule","forRoot","publishableKey","ngModule","providers","provide","useValue","NgModule","declarations"],"mappings":"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","file":"ngx-stripe.umd.min.js.map","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common'], factory) :\n\t(factory((global.beatbaseaps = global.beatbaseaps || {}, global.beatbaseaps.ngxstripe = {}),global.ng.core,global.ng.common));\n}(this, (function (exports,core,common) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nvar config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = /*@__PURE__*/ new Error();\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction hostReportError(err) {\n    setTimeout(function () { throw err; });\n}\n\n/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nvar empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar errorObject = { e: {} };\n\n/** PURE_IMPORTS_START _errorObject PURE_IMPORTS_END */\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.e = e;\n        return errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction UnsubscriptionErrorImpl(errors) {\n    Error.call(this);\n    this.message = errors ?\n        errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n}\nUnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nvar UnsubscriptionError = UnsubscriptionErrorImpl;\n\n/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_tryCatch,_util_errorObject,_util_UnsubscriptionError PURE_IMPORTS_END */\nvar Subscription = /*@__PURE__*/ (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        while (_parent) {\n            _parent.remove(this);\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction(_unsubscribe)) {\n            var trial = tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.e instanceof UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]);\n            }\n        }\n        if (isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    var trial = tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.e;\n                        if (err instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function') {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? /*@__PURE__*/ Symbol.for('rxSubscriber')\n    : '@@rxSubscriber';\n\n/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\nvar Subscriber = /*@__PURE__*/ (function (_super) {\n    __extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        _this._parentSubscription = null;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (isTrustedSubscriber(destinationOrNext)) {\n                        var trustedSubscriber = destinationOrNext[rxSubscriber]();\n                        _this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n                        _this.destination = trustedSubscriber;\n                        trustedSubscriber._addParentTeardownLogic(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriber] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n            this._unsubscribeParentSubscription();\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n            this._unsubscribeParentSubscription();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._addParentTeardownLogic = function (parentTeardownLogic) {\n        if (parentTeardownLogic !== this) {\n            this._parentSubscription = this.add(parentTeardownLogic);\n        }\n    };\n    Subscriber.prototype._unsubscribeParentSubscription = function () {\n        if (this._parentSubscription !== null) {\n            this._parentSubscription.unsubscribe();\n        }\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        this._parentSubscription = null;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nfunction isTrustedSubscriber(obj) {\n    return obj instanceof Subscriber || ('_addParentTeardownLogic' in obj && obj[rxSubscriber]);\n}\n\n/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber]) {\n            return nextOrObserver[rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(empty);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction noop() { }\n\n/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */\n\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n\n/** PURE_IMPORTS_START _util_toSubscriber,_internal_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nvar Observable = /*@__PURE__*/ (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable$$1 = new Observable();\n        observable$$1.source = this;\n        observable$$1.operator = operator;\n        return observable$$1;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink._addParentTeardownLogic(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            sink.error(err);\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction ObjectUnsubscribedErrorImpl() {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n}\nObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nvar ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;\n\n/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nvar SubjectSubscription = /*@__PURE__*/ (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\n\n/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */\nvar SubjectSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\nvar Subject = /*@__PURE__*/ (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nvar AnonymousSubject = /*@__PURE__*/ (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nfunction refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nvar RefCountOperator = /*@__PURE__*/ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */\nvar ConnectableObservable = /*@__PURE__*/ (function (_super) {\n    __extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subjectFactory = subjectFactory;\n        _this._refCount = 0;\n        _this._isComplete = false;\n        return _this;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return refCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable));\nvar connectableProto = ConnectableObservable.prototype;\nvar connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(SubjectSubscriber));\nvar RefCountSubscriber$1 = /*@__PURE__*/ (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount$$1 = connectable._refCount;\n        if (refCount$$1 <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount$$1 - 1;\n        if (refCount$$1 > 1) {\n            this.connection = null;\n            return;\n        }\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription,_Observable,_Subject PURE_IMPORTS_END */\n\nvar GroupBySubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(GroupBySubscriber, _super);\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.elementSelector = elementSelector;\n        _this.durationSelector = durationSelector;\n        _this.subjectSelector = subjectSelector;\n        _this.groups = null;\n        _this.attemptedToUnsubscribe = false;\n        _this.count = 0;\n        return _this;\n    }\n    GroupBySubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    };\n    GroupBySubscriber.prototype._group = function (value, key) {\n        var groups = this.groups;\n        if (!groups) {\n            groups = this.groups = new Map();\n        }\n        var group = groups.get(key);\n        var element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = (this.subjectSelector ? this.subjectSelector() : new Subject());\n            groups.set(key, group);\n            var groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                var duration = void 0;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    };\n    GroupBySubscriber.prototype._error = function (err) {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    };\n    GroupBySubscriber.prototype._complete = function () {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    };\n    GroupBySubscriber.prototype.removeGroup = function (key) {\n        this.groups.delete(key);\n    };\n    GroupBySubscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                _super.prototype.unsubscribe.call(this);\n            }\n        }\n    };\n    return GroupBySubscriber;\n}(Subscriber));\nvar GroupDurationSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(GroupDurationSubscriber, _super);\n    function GroupDurationSubscriber(key, group, parent) {\n        var _this = _super.call(this, group) || this;\n        _this.key = key;\n        _this.group = group;\n        _this.parent = parent;\n        return _this;\n    }\n    GroupDurationSubscriber.prototype._next = function (value) {\n        this.complete();\n    };\n    GroupDurationSubscriber.prototype._unsubscribe = function () {\n        var _a = this, parent = _a.parent, key = _a.key;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    };\n    return GroupDurationSubscriber;\n}(Subscriber));\nvar GroupedObservable = /*@__PURE__*/ (function (_super) {\n    __extends(GroupedObservable, _super);\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\n        var _this = _super.call(this) || this;\n        _this.key = key;\n        _this.groupSubject = groupSubject;\n        _this.refCountSubscription = refCountSubscription;\n        return _this;\n    }\n    GroupedObservable.prototype._subscribe = function (subscriber) {\n        var subscription = new Subscription();\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    };\n    return GroupedObservable;\n}(Observable));\nvar InnerRefCountSubscription = /*@__PURE__*/ (function (_super) {\n    __extends(InnerRefCountSubscription, _super);\n    function InnerRefCountSubscription(parent) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        parent.count++;\n        return _this;\n    }\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\n        var parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            _super.prototype.unsubscribe.call(this);\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    };\n    return InnerRefCountSubscription;\n}(Subscription));\n\n/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */\nvar BehaviorSubject = /*@__PURE__*/ (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        var _this = _super.call(this) || this;\n        _this._value = _value;\n        return _this;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject));\n\n/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nvar Action = /*@__PURE__*/ (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        return _super.call(this) || this;\n    }\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return this;\n    };\n    return Action;\n}(Subscription));\n\n/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */\nvar AsyncAction = /*@__PURE__*/ (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n    };\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action));\n\n/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nvar QueueAction = /*@__PURE__*/ (function (_super) {\n    __extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction));\n\nvar Scheduler = /*@__PURE__*/ (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = function () { return Date.now(); };\n    return Scheduler;\n}());\n\n/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */\nvar AsyncScheduler = /*@__PURE__*/ (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        var _this = _super.call(this, SchedulerAction, function () {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        }) || this;\n        _this.actions = [];\n        _this.active = false;\n        _this.scheduled = undefined;\n        return _this;\n    }\n    AsyncScheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return _super.prototype.schedule.call(this, work, delay, state);\n        }\n    };\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\n\n/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nvar QueueScheduler = /*@__PURE__*/ (function (_super) {\n    __extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return QueueScheduler;\n}(AsyncScheduler));\n\n/** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */\nvar queue = /*@__PURE__*/ new QueueScheduler(QueueAction);\n\n/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nvar EMPTY = /*@__PURE__*/ new Observable(function (subscriber) { return subscriber.complete(); });\nfunction empty$1(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\n}\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar subscribeToArray = function (array) {\n    return function (subscriber) {\n        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        if (!subscriber.closed) {\n            subscriber.complete();\n        }\n    };\n};\n\n/** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToArray PURE_IMPORTS_END */\nfunction fromArray(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToArray(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            var i = 0;\n            sub.add(scheduler.schedule(function () {\n                if (i === input.length) {\n                    subscriber.complete();\n                    return;\n                }\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    sub.add(this.schedule());\n                }\n            }));\n            return sub;\n        });\n    }\n}\n\n/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nfunction scalar(value) {\n    var result = new Observable(function (subscriber) {\n        subscriber.next(value);\n        subscriber.complete();\n    });\n    result._isScalar = true;\n    result.value = value;\n    return result;\n}\n\n/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_empty,_scalar PURE_IMPORTS_END */\nfunction of() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = args[args.length - 1];\n    if (isScheduler(scheduler)) {\n        args.pop();\n    }\n    else {\n        scheduler = undefined;\n    }\n    switch (args.length) {\n        case 0:\n            return empty$1(scheduler);\n        case 1:\n            return scheduler ? fromArray(args, scheduler) : scalar(args[0]);\n        default:\n            return fromArray(args, scheduler);\n    }\n}\n\n/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nfunction throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(function (subscriber) { return subscriber.error(error); });\n    }\n    else {\n        return new Observable(function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });\n    }\n}\nfunction dispatch(_a) {\n    var error = _a.error, subscriber = _a.subscriber;\n    subscriber.error(error);\n}\n\n/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */\nvar Notification = /*@__PURE__*/ (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return of(this.value);\n            case 'E':\n                return throwError(this.error);\n            case 'C':\n                return empty$1();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */\n\nvar ObserveOnSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.scheduler = scheduler;\n        _this.delay = delay;\n        return _this;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification.createError(err));\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification.createComplete());\n    };\n    return ObserveOnSubscriber;\n}(Subscriber));\nvar ObserveOnMessage = /*@__PURE__*/ (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\n\n/** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */\nvar ReplaySubject = /*@__PURE__*/ (function (_super) {\n    __extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) {\n            bufferSize = Number.POSITIVE_INFINITY;\n        }\n        if (windowTime === void 0) {\n            windowTime = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this) || this;\n        _this.scheduler = scheduler;\n        _this._events = [];\n        _this._infiniteTimeWindow = false;\n        _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        _this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            _this._infiniteTimeWindow = true;\n            _this.next = _this.nextInfiniteTimeWindow;\n        }\n        else {\n            _this.next = _this.nextTimeWindow;\n        }\n        return _this;\n    }\n    ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {\n        var _events = this._events;\n        _events.push(value);\n        if (_events.length > this._bufferSize) {\n            _events.shift();\n        }\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype.nextTimeWindow = function (value) {\n        this._events.push(new ReplayEvent(this._getNow(), value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _infiniteTimeWindow = this._infiniteTimeWindow;\n        var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        var len = _events.length;\n        var subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject));\nvar ReplayEvent = /*@__PURE__*/ (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n\n/** PURE_IMPORTS_START tslib,_Subject,_Subscription PURE_IMPORTS_END */\nvar AsyncSubject = /*@__PURE__*/ (function (_super) {\n    __extends(AsyncSubject, _super);\n    function AsyncSubject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.value = null;\n        _this.hasNext = false;\n        _this.hasCompleted = false;\n        return _this;\n    }\n    AsyncSubject.prototype._subscribe = function (subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    AsyncSubject.prototype.next = function (value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    };\n    AsyncSubject.prototype.error = function (error) {\n        if (!this.hasCompleted) {\n            _super.prototype.error.call(this, error);\n        }\n    };\n    AsyncSubject.prototype.complete = function () {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            _super.prototype.next.call(this, this.value);\n        }\n        _super.prototype.complete.call(this);\n    };\n    return AsyncSubject;\n}(Subject));\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar nextHandle = 1;\nvar tasksByHandle = {};\nfunction runIfPresent(handle) {\n    var cb = tasksByHandle[handle];\n    if (cb) {\n        cb();\n    }\n}\nvar Immediate = {\n    setImmediate: function (cb) {\n        var handle = nextHandle++;\n        tasksByHandle[handle] = cb;\n        Promise.resolve().then(function () { return runIfPresent(handle); });\n        return handle;\n    },\n    clearImmediate: function (handle) {\n        delete tasksByHandle[handle];\n    },\n};\n\n/** PURE_IMPORTS_START tslib,_util_Immediate,_AsyncAction PURE_IMPORTS_END */\nvar AsapAction = /*@__PURE__*/ (function (_super) {\n    __extends(AsapAction, _super);\n    function AsapAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    };\n    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    };\n    return AsapAction;\n}(AsyncAction));\n\n/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nvar AsapScheduler = /*@__PURE__*/ (function (_super) {\n    __extends(AsapScheduler, _super);\n    function AsapScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AsapScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsapScheduler;\n}(AsyncScheduler));\n\n/** PURE_IMPORTS_START _AsapAction,_AsapScheduler PURE_IMPORTS_END */\nvar asap = /*@__PURE__*/ new AsapScheduler(AsapAction);\n\n/** PURE_IMPORTS_START _AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\nvar async = /*@__PURE__*/ new AsyncScheduler(AsyncAction);\n\n/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nvar AnimationFrameAction = /*@__PURE__*/ (function (_super) {\n    __extends(AnimationFrameAction, _super);\n    function AnimationFrameAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () { return scheduler.flush(null); }));\n    };\n    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    };\n    return AnimationFrameAction;\n}(AsyncAction));\n\n/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nvar AnimationFrameScheduler = /*@__PURE__*/ (function (_super) {\n    __extends(AnimationFrameScheduler, _super);\n    function AnimationFrameScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AnimationFrameScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AnimationFrameScheduler;\n}(AsyncScheduler));\n\n/** PURE_IMPORTS_START _AnimationFrameAction,_AnimationFrameScheduler PURE_IMPORTS_END */\nvar animationFrame = /*@__PURE__*/ new AnimationFrameScheduler(AnimationFrameAction);\n\n/** PURE_IMPORTS_START tslib,_AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\nvar VirtualTimeScheduler = /*@__PURE__*/ (function (_super) {\n    __extends(VirtualTimeScheduler, _super);\n    function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n        if (SchedulerAction === void 0) {\n            SchedulerAction = VirtualAction;\n        }\n        if (maxFrames === void 0) {\n            maxFrames = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this, SchedulerAction, function () { return _this.frame; }) || this;\n        _this.maxFrames = maxFrames;\n        _this.frame = 0;\n        _this.index = -1;\n        return _this;\n    }\n    VirtualTimeScheduler.prototype.flush = function () {\n        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\n        var error, action;\n        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    VirtualTimeScheduler.frameTimeFactor = 10;\n    return VirtualTimeScheduler;\n}(AsyncScheduler));\nvar VirtualAction = /*@__PURE__*/ (function (_super) {\n    __extends(VirtualAction, _super);\n    function VirtualAction(scheduler, work, index) {\n        if (index === void 0) {\n            index = scheduler.index += 1;\n        }\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.index = index;\n        _this.active = true;\n        _this.index = scheduler.index = index;\n        return _this;\n    }\n    VirtualAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (!this.id) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.active = false;\n        var action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    };\n    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.delay = scheduler.frame + delay;\n        var actions = scheduler.actions;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    };\n    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return undefined;\n    };\n    VirtualAction.prototype._execute = function (state, delay) {\n        if (this.active === true) {\n            return _super.prototype._execute.call(this, state, delay);\n        }\n    };\n    VirtualAction.sortActions = function (a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    return VirtualAction;\n}(AsyncAction));\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction ArgumentOutOfRangeErrorImpl() {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n}\nArgumentOutOfRangeErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nvar ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction EmptyErrorImpl() {\n    Error.call(this);\n    this.message = 'no elements in sequence';\n    this.name = 'EmptyError';\n    return this;\n}\nEmptyErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nvar EmptyError = EmptyErrorImpl;\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nfunction map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nvar MapSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_isArray,_util_isScheduler PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_isScheduler,_util_isArray PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nvar OuterSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nvar InnerSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.outerValue = outerValue;\n        _this.outerIndex = outerIndex;\n        _this.index = 0;\n        return _this;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */\nvar subscribeToPromise = function (promise) {\n    return function (subscriber) {\n        promise.then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, hostReportError);\n        return subscriber;\n    };\n};\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nvar iterator = /*@__PURE__*/ getSymbolIterator();\n\n/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nvar subscribeToIterable = function (iterable) {\n    return function (subscriber) {\n        var iterator$$1 = iterable[iterator]();\n        do {\n            var item = iterator$$1.next();\n            if (item.done) {\n                subscriber.complete();\n                break;\n            }\n            subscriber.next(item.value);\n            if (subscriber.closed) {\n                break;\n            }\n        } while (true);\n        if (typeof iterator$$1.return === 'function') {\n            subscriber.add(function () {\n                if (iterator$$1.return) {\n                    iterator$$1.return();\n                }\n            });\n        }\n        return subscriber;\n    };\n};\n\n/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nvar subscribeToObservable = function (obj) {\n    return function (subscriber) {\n        var obs = obj[observable]();\n        if (typeof obs.subscribe !== 'function') {\n            throw new TypeError('Provided object does not correctly implement Symbol.observable');\n        }\n        else {\n            return obs.subscribe(subscriber);\n        }\n    };\n};\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n\n/** PURE_IMPORTS_START _Observable,_subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */\nvar subscribeTo = function (result) {\n    if (result instanceof Observable) {\n        return function (subscriber) {\n            if (result._isScalar) {\n                subscriber.next(result.value);\n                subscriber.complete();\n                return undefined;\n            }\n            else {\n                return result.subscribe(subscriber);\n            }\n        };\n    }\n    else if (result && typeof result[observable] === 'function') {\n        return subscribeToObservable(result);\n    }\n    else if (isArrayLike(result)) {\n        return subscribeToArray(result);\n    }\n    else if (isPromise(result)) {\n        return subscribeToPromise(result);\n    }\n    else if (result && typeof result[iterator] === 'function') {\n        return subscribeToIterable(result);\n    }\n    else {\n        var value = isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = \"You provided \" + value + \" where a stream was expected.\"\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        throw new TypeError(msg);\n    }\n};\n\n/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo PURE_IMPORTS_END */\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex, destination) {\n    if (destination === void 0) {\n        destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    }\n    if (destination.closed) {\n        return;\n    }\n    return subscribeTo(result)(destination);\n}\n\n/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */\nvar NONE = {};\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = null;\n    var scheduler = null;\n    if (isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        resultSelector = observables.pop();\n    }\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nvar CombineLatestOperator = /*@__PURE__*/ (function () {\n    function CombineLatestOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n    };\n    return CombineLatestOperator;\n}());\nvar CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.resultSelector = resultSelector;\n        _this.active = 0;\n        _this.values = [];\n        _this.observables = [];\n        return _this;\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(NONE);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.resultSelector) {\n                this._tryResultSelector(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nfunction isInteropObservable(input) {\n    return input && typeof input[observable] === 'function';\n}\n\n/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nfunction isIterable(input) {\n    return input && typeof input[iterator] === 'function';\n}\n\n/** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToPromise PURE_IMPORTS_END */\nfunction fromPromise(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToPromise(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            sub.add(scheduler.schedule(function () {\n                return input.then(function (value) {\n                    sub.add(scheduler.schedule(function () {\n                        subscriber.next(value);\n                        sub.add(scheduler.schedule(function () { return subscriber.complete(); }));\n                    }));\n                }, function (err) {\n                    sub.add(scheduler.schedule(function () { return subscriber.error(err); }));\n                });\n            }));\n            return sub;\n        });\n    }\n}\n\n/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator,_util_subscribeToIterable PURE_IMPORTS_END */\nfunction fromIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    if (!scheduler) {\n        return new Observable(subscribeToIterable(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            var iterator$$1;\n            sub.add(function () {\n                if (iterator$$1 && typeof iterator$$1.return === 'function') {\n                    iterator$$1.return();\n                }\n            });\n            sub.add(scheduler.schedule(function () {\n                iterator$$1 = input[iterator]();\n                sub.add(scheduler.schedule(function () {\n                    if (subscriber.closed) {\n                        return;\n                    }\n                    var value;\n                    var done;\n                    try {\n                        var result = iterator$$1.next();\n                        value = result.value;\n                        done = result.done;\n                    }\n                    catch (err) {\n                        subscriber.error(err);\n                        return;\n                    }\n                    if (done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(value);\n                        this.schedule();\n                    }\n                }));\n            }));\n            return sub;\n        });\n    }\n}\n\n/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable,_util_subscribeToObservable PURE_IMPORTS_END */\nfunction fromObservable(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToObservable(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            sub.add(scheduler.schedule(function () {\n                var observable$$1 = input[observable]();\n                sub.add(observable$$1.subscribe({\n                    next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },\n                    error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },\n                    complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },\n                }));\n            }));\n            return sub;\n        });\n    }\n}\n\n/** PURE_IMPORTS_START _Observable,_util_isPromise,_util_isArrayLike,_util_isInteropObservable,_util_isIterable,_fromArray,_fromPromise,_fromIterable,_fromObservable,_util_subscribeTo PURE_IMPORTS_END */\nfunction from(input, scheduler) {\n    if (!scheduler) {\n        if (input instanceof Observable) {\n            return input;\n        }\n        return new Observable(subscribeTo(input));\n    }\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return fromObservable(input, scheduler);\n        }\n        else if (isPromise(input)) {\n            return fromPromise(input, scheduler);\n        }\n        else if (isArrayLike(input)) {\n            return fromArray(input, scheduler);\n        }\n        else if (isIterable(input) || typeof input === 'string') {\n            return fromIterable(input, scheduler);\n        }\n    }\n    throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n\n/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_InnerSubscriber,_map,_observable_from PURE_IMPORTS_END */\n\nvar MergeMapSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n        this.add(innerSubscriber);\n        subscribeToResult(this, ish, value, index, innerSubscriber);\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _mergeMap,_util_identity PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _mergeAll PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _util_isScheduler,_of,_from,_operators_concatAll PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Observable,_util_isArray,_empty,_util_subscribeToResult,_OuterSubscriber,_operators_map PURE_IMPORTS_END */\n\nvar ForkJoinSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(ForkJoinSubscriber, _super);\n    function ForkJoinSubscriber(destination, sources) {\n        var _this = _super.call(this, destination) || this;\n        _this.sources = sources;\n        _this.completed = 0;\n        _this.haveValues = 0;\n        var len = sources.length;\n        _this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            var source = sources[i];\n            var innerSubscription = subscribeToResult(_this, source, null, i);\n            if (innerSubscription) {\n                _this.add(innerSubscription);\n            }\n        }\n        return _this;\n    }\n    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    };\n    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n        var _a = this, destination = _a.destination, haveValues = _a.haveValues, values = _a.values;\n        var len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            destination.next(values);\n        }\n        destination.complete();\n    };\n    return ForkJoinSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _Observable,_util_identity,_util_isScheduler PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _defer,_empty PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */\nfunction isNumeric(val) {\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n\n/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _Observable,_util_noop PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _Observable,_from,_util_isArray,_empty PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar RaceSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(RaceSubscriber, _super);\n    function RaceSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasFirst = false;\n        _this.observables = [];\n        _this.subscriptions = [];\n        return _this;\n    }\n    RaceSubscriber.prototype._next = function (observable) {\n        this.observables.push(observable);\n    };\n    RaceSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (var i = 0; i < len && !this.hasFirst; i++) {\n                var observable = observables[i];\n                var subscription = subscribeToResult(this, observable, observable, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    };\n    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (var i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    var subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    };\n    return RaceSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_OuterSubscriber,_util_subscribeToResult,_.._internal_symbol_iterator PURE_IMPORTS_END */\n\nvar ZipSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, resultSelector, values) {\n        if (values === void 0) {\n            values = Object.create(null);\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.iterators = [];\n        _this.active = 0;\n        _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n        _this.values = values;\n        return _this;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[iterator] === 'function') {\n            iterators.push(new StaticIterator(value[iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator$$1 = iterators[i];\n            if (iterator$$1.stillUnsubscribed) {\n                this.add(iterator$$1.subscribe(iterator$$1, i));\n            }\n            else {\n                this.active--;\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        for (var i = 0; i < len; i++) {\n            var iterator$$1 = iterators[i];\n            if (typeof iterator$$1.hasValue === 'function' && !iterator$$1.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator$$1 = iterators[i];\n            var result = iterator$$1.next();\n            if (iterator$$1.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryresultSelector = function (args) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber));\nvar StaticIterator = /*@__PURE__*/ (function () {\n    function StaticIterator(iterator$$1) {\n        this.iterator = iterator$$1;\n        this.nextResult = iterator$$1.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = /*@__PURE__*/ (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\nvar ZipBufferIterator = /*@__PURE__*/ (function (_super) {\n    __extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        _this.observable = observable;\n        _this.stillUnsubscribed = true;\n        _this.buffer = [];\n        _this.isComplete = false;\n        return _this;\n    }\n    ZipBufferIterator.prototype[iterator] = function () {\n        return this;\n    };\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar AuditSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(AuditSubscriber, _super);\n    function AuditSubscriber(destination, durationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.durationSelector = durationSelector;\n        _this.hasValue = false;\n        return _this;\n    }\n    AuditSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            var duration = tryCatch(this.durationSelector)(value);\n            if (duration === errorObject) {\n                this.destination.error(errorObject.e);\n            }\n            else {\n                var innerSubscription = subscribeToResult(this, duration);\n                if (!innerSubscription || innerSubscription.closed) {\n                    this.clearThrottle();\n                }\n                else {\n                    this.add(this.throttled = innerSubscription);\n                }\n            }\n        }\n    };\n    AuditSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        this.clearThrottle();\n    };\n    AuditSubscriber.prototype.notifyComplete = function () {\n        this.clearThrottle();\n    };\n    return AuditSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _scheduler_async,_audit,_observable_timer PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar BufferSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(BufferSubscriber, _super);\n    function BufferSubscriber(destination, closingNotifier) {\n        var _this = _super.call(this, destination) || this;\n        _this.buffer = [];\n        _this.add(subscribeToResult(_this, closingNotifier));\n        return _this;\n    }\n    BufferSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var buffer = this.buffer;\n        this.buffer = [];\n        this.destination.next(buffer);\n    };\n    return BufferSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar BufferCountSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(BufferCountSubscriber, _super);\n    function BufferCountSubscriber(destination, bufferSize) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferSize = bufferSize;\n        _this.buffer = [];\n        return _this;\n    }\n    BufferCountSubscriber.prototype._next = function (value) {\n        var buffer = this.buffer;\n        buffer.push(value);\n        if (buffer.length == this.bufferSize) {\n            this.destination.next(buffer);\n            this.buffer = [];\n        }\n    };\n    BufferCountSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferCountSubscriber;\n}(Subscriber));\nvar BufferSkipCountSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(BufferSkipCountSubscriber, _super);\n    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferSize = bufferSize;\n        _this.startBufferEvery = startBufferEvery;\n        _this.buffers = [];\n        _this.count = 0;\n        return _this;\n    }\n    BufferSkipCountSubscriber.prototype._next = function (value) {\n        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;\n        this.count++;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (var i = buffers.length; i--;) {\n            var buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                buffers.splice(i, 1);\n                this.destination.next(buffer);\n            }\n        }\n    };\n    BufferSkipCountSubscriber.prototype._complete = function () {\n        var _a = this, buffers = _a.buffers, destination = _a.destination;\n        while (buffers.length > 0) {\n            var buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferSkipCountSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_scheduler_async,_Subscriber,_util_isScheduler PURE_IMPORTS_END */\n\nvar Context = /*@__PURE__*/ (function () {\n    function Context() {\n        this.buffer = [];\n    }\n    return Context;\n}());\nvar BufferTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(BufferTimeSubscriber, _super);\n    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferTimeSpan = bufferTimeSpan;\n        _this.bufferCreationInterval = bufferCreationInterval;\n        _this.maxBufferSize = maxBufferSize;\n        _this.scheduler = scheduler;\n        _this.contexts = [];\n        var context = _this.openContext();\n        _this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n        if (_this.timespanOnly) {\n            var timeSpanOnlyState = { subscriber: _this, context: context, bufferTimeSpan: bufferTimeSpan };\n            _this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n        else {\n            var closeState = { subscriber: _this, context: context };\n            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: _this, scheduler: scheduler };\n            _this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n            _this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n        }\n        return _this;\n    }\n    BufferTimeSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        var filledBufferContext;\n        for (var i = 0; i < len; i++) {\n            var context_1 = contexts[i];\n            var buffer = context_1.buffer;\n            buffer.push(value);\n            if (buffer.length == this.maxBufferSize) {\n                filledBufferContext = context_1;\n            }\n        }\n        if (filledBufferContext) {\n            this.onBufferFull(filledBufferContext);\n        }\n    };\n    BufferTimeSubscriber.prototype._error = function (err) {\n        this.contexts.length = 0;\n        _super.prototype._error.call(this, err);\n    };\n    BufferTimeSubscriber.prototype._complete = function () {\n        var _a = this, contexts = _a.contexts, destination = _a.destination;\n        while (contexts.length > 0) {\n            var context_2 = contexts.shift();\n            destination.next(context_2.buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferTimeSubscriber.prototype._unsubscribe = function () {\n        this.contexts = null;\n    };\n    BufferTimeSubscriber.prototype.onBufferFull = function (context) {\n        this.closeContext(context);\n        var closeAction = context.closeAction;\n        closeAction.unsubscribe();\n        this.remove(closeAction);\n        if (!this.closed && this.timespanOnly) {\n            context = this.openContext();\n            var bufferTimeSpan = this.bufferTimeSpan;\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\n            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n    };\n    BufferTimeSubscriber.prototype.openContext = function () {\n        var context = new Context();\n        this.contexts.push(context);\n        return context;\n    };\n    BufferTimeSubscriber.prototype.closeContext = function (context) {\n        this.destination.next(context.buffer);\n        var contexts = this.contexts;\n        var spliceIndex = contexts ? contexts.indexOf(context) : -1;\n        if (spliceIndex >= 0) {\n            contexts.splice(contexts.indexOf(context), 1);\n        }\n    };\n    return BufferTimeSubscriber;\n}(Subscriber));\nfunction dispatchBufferTimeSpanOnly(state) {\n    var subscriber = state.subscriber;\n    var prevContext = state.context;\n    if (prevContext) {\n        subscriber.closeContext(prevContext);\n    }\n    if (!subscriber.closed) {\n        state.context = subscriber.openContext();\n        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n    }\n}\nfunction dispatchBufferCreation(state) {\n    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;\n    var context = subscriber.openContext();\n    var action = this;\n    if (!subscriber.closed) {\n        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));\n        action.schedule(state, bufferCreationInterval);\n    }\n}\nfunction dispatchBufferClose(arg) {\n    var subscriber = arg.subscriber, context = arg.context;\n    subscriber.closeContext(context);\n}\n\n/** PURE_IMPORTS_START tslib,_Subscription,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */\n\nvar BufferToggleSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(BufferToggleSubscriber, _super);\n    function BufferToggleSubscriber(destination, openings, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.openings = openings;\n        _this.closingSelector = closingSelector;\n        _this.contexts = [];\n        _this.add(subscribeToResult(_this, openings));\n        return _this;\n    }\n    BufferToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        for (var i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    };\n    BufferToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context_1 = contexts.shift();\n            context_1.subscription.unsubscribe();\n            context_1.buffer = null;\n            context_1.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._error.call(this, err);\n    };\n    BufferToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context_2 = contexts.shift();\n            this.destination.next(context_2.buffer);\n            context_2.subscription.unsubscribe();\n            context_2.buffer = null;\n            context_2.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._complete.call(this);\n    };\n    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    };\n    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.closeBuffer(innerSub.context);\n    };\n    BufferToggleSubscriber.prototype.openBuffer = function (value) {\n        try {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    BufferToggleSubscriber.prototype.closeBuffer = function (context) {\n        var contexts = this.contexts;\n        if (contexts && context) {\n            var buffer = context.buffer, subscription = context.subscription;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    };\n    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\n        var contexts = this.contexts;\n        var buffer = [];\n        var subscription = new Subscription();\n        var context = { buffer: buffer, subscription: subscription };\n        contexts.push(context);\n        var innerSubscription = subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    };\n    return BufferToggleSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscription,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar BufferWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(BufferWhenSubscriber, _super);\n    function BufferWhenSubscriber(destination, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.closingSelector = closingSelector;\n        _this.subscribing = false;\n        _this.openBuffer();\n        return _this;\n    }\n    BufferWhenSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferWhenSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferWhenSubscriber.prototype._unsubscribe = function () {\n        this.buffer = null;\n        this.subscribing = false;\n    };\n    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openBuffer();\n    };\n    BufferWhenSubscriber.prototype.notifyComplete = function () {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    };\n    BufferWhenSubscriber.prototype.openBuffer = function () {\n        var closingSubscription = this.closingSubscription;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        var buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        var closingNotifier = tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject) {\n            this.error(errorObject.e);\n        }\n        else {\n            closingSubscription = new Subscription();\n            this.closingSubscription = closingSubscription;\n            this.add(closingSubscription);\n            this.subscribing = true;\n            closingSubscription.add(subscribeToResult(this, closingNotifier));\n            this.subscribing = false;\n        }\n    };\n    return BufferWhenSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar CatchSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        var _this = _super.call(this, destination) || this;\n        _this.selector = selector;\n        _this.caught = caught;\n        return _this;\n    }\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n            this.add(innerSubscriber);\n            subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _observable_combineLatest PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _util_isArray,_observable_combineLatest,_observable_from PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _observable_concat PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _concatMap PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar CountSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(CountSubscriber, _super);\n    function CountSubscriber(destination, predicate, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.count = 0;\n        _this.index = 0;\n        return _this;\n    }\n    CountSubscriber.prototype._next = function (value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._tryPredicate = function (value) {\n        var result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._complete = function () {\n        this.destination.next(this.count);\n        this.destination.complete();\n    };\n    return CountSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar DebounceSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(DebounceSubscriber, _super);\n    function DebounceSubscriber(destination, durationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.durationSelector = durationSelector;\n        _this.hasValue = false;\n        _this.durationSubscription = null;\n        return _this;\n    }\n    DebounceSubscriber.prototype._next = function (value) {\n        try {\n            var result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DebounceSubscriber.prototype._complete = function () {\n        this.emitValue();\n        this.destination.complete();\n    };\n    DebounceSubscriber.prototype._tryNext = function (value, duration) {\n        var subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = subscribeToResult(this, duration);\n        if (subscription && !subscription.closed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    };\n    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            var value = this.value;\n            var subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = null;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            this.value = null;\n            this.hasValue = false;\n            _super.prototype._next.call(this, value);\n        }\n    };\n    return DebounceSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */\n\nvar DebounceTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(DebounceTimeSubscriber, _super);\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.dueTime = dueTime;\n        _this.scheduler = scheduler;\n        _this.debouncedSubscription = null;\n        _this.lastValue = null;\n        _this.hasValue = false;\n        return _this;\n    }\n    DebounceTimeSubscriber.prototype._next = function (value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext$2, this.dueTime, this));\n    };\n    DebounceTimeSubscriber.prototype._complete = function () {\n        this.debouncedNext();\n        this.destination.complete();\n    };\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n        this.clearDebounce();\n        if (this.hasValue) {\n            var lastValue = this.lastValue;\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    };\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n        var debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    };\n    return DebounceTimeSubscriber;\n}(Subscriber));\nfunction dispatchNext$2(subscriber) {\n    subscriber.debouncedNext();\n}\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar DefaultIfEmptySubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(DefaultIfEmptySubscriber, _super);\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\n        var _this = _super.call(this, destination) || this;\n        _this.defaultValue = defaultValue;\n        _this.isEmpty = true;\n        return _this;\n    }\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    };\n    DefaultIfEmptySubscriber.prototype._complete = function () {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    };\n    return DefaultIfEmptySubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */\n\nvar DelaySubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(DelaySubscriber, _super);\n    function DelaySubscriber(destination, delay, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.delay = delay;\n        _this.scheduler = scheduler;\n        _this.queue = [];\n        _this.active = false;\n        _this.errored = false;\n        return _this;\n    }\n    DelaySubscriber.dispatch = function (state) {\n        var source = state.source;\n        var queue = source.queue;\n        var scheduler = state.scheduler;\n        var destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay_1);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    };\n    DelaySubscriber.prototype._schedule = function (scheduler) {\n        this.active = true;\n        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    };\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\n        if (this.errored === true) {\n            return;\n        }\n        var scheduler = this.scheduler;\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    };\n    DelaySubscriber.prototype._next = function (value) {\n        this.scheduleNotification(Notification.createNext(value));\n    };\n    DelaySubscriber.prototype._error = function (err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n    };\n    DelaySubscriber.prototype._complete = function () {\n        this.scheduleNotification(Notification.createComplete());\n    };\n    return DelaySubscriber;\n}(Subscriber));\nvar DelayMessage = /*@__PURE__*/ (function () {\n    function DelayMessage(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n    return DelayMessage;\n}());\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar DelayWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(DelayWhenSubscriber, _super);\n    function DelayWhenSubscriber(destination, delayDurationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.delayDurationSelector = delayDurationSelector;\n        _this.completed = false;\n        _this.delayNotifierSubscriptions = [];\n        _this.index = 0;\n        return _this;\n    }\n    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        var value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        try {\n            var delayNotifier = this.delayDurationSelector(value, index);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DelayWhenSubscriber.prototype._complete = function () {\n        this.completed = true;\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\n        subscription.unsubscribe();\n        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        if (subscriptionIdx !== -1) {\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n        }\n        return subscription.outerValue;\n    };\n    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\n        var notifierSubscription = subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            this.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n    };\n    DelayWhenSubscriber.prototype.tryComplete = function () {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    };\n    return DelayWhenSubscriber;\n}(OuterSubscriber));\nvar SubscriptionDelayObservable = /*@__PURE__*/ (function (_super) {\n    __extends(SubscriptionDelayObservable, _super);\n    function SubscriptionDelayObservable(source, subscriptionDelay) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subscriptionDelay = subscriptionDelay;\n        return _this;\n    }\n    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    };\n    return SubscriptionDelayObservable;\n}(Observable));\nvar SubscriptionDelaySubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SubscriptionDelaySubscriber, _super);\n    function SubscriptionDelaySubscriber(parent, source) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.source = source;\n        _this.sourceSubscribed = false;\n        return _this;\n    }\n    SubscriptionDelaySubscriber.prototype._next = function (unused) {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype._error = function (err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    };\n    SubscriptionDelaySubscriber.prototype._complete = function () {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    };\n    return SubscriptionDelaySubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar DeMaterializeSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(DeMaterializeSubscriber, _super);\n    function DeMaterializeSubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    DeMaterializeSubscriber.prototype._next = function (value) {\n        value.observe(this.destination);\n    };\n    return DeMaterializeSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar DistinctSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(DistinctSubscriber, _super);\n    function DistinctSubscriber(destination, keySelector, flushes) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.values = new Set();\n        if (flushes) {\n            _this.add(subscribeToResult(_this, flushes));\n        }\n        return _this;\n    }\n    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values.clear();\n    };\n    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DistinctSubscriber.prototype._next = function (value) {\n        if (this.keySelector) {\n            this._useKeySelector(value);\n        }\n        else {\n            this._finalizeNext(value, value);\n        }\n    };\n    DistinctSubscriber.prototype._useKeySelector = function (value) {\n        var key;\n        var destination = this.destination;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this._finalizeNext(key, value);\n    };\n    DistinctSubscriber.prototype._finalizeNext = function (key, value) {\n        var values = this.values;\n        if (!values.has(key)) {\n            values.add(key);\n            this.destination.next(value);\n        }\n    };\n    return DistinctSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_util_tryCatch,_util_errorObject PURE_IMPORTS_END */\n\nvar DistinctUntilChangedSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.hasKey = false;\n        if (typeof compare === 'function') {\n            _this.compare = compare;\n        }\n        return _this;\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch(this.keySelector)(value);\n            if (key === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch(this.compare)(this.key, key);\n            if (result === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _distinctUntilChanged PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nfunction filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nvar FilterOperator = /*@__PURE__*/ (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\nvar FilterSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.count = 0;\n        return _this;\n    }\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_util_noop,_util_isFunction PURE_IMPORTS_END */\n\nvar TapSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(TapSubscriber, _super);\n    function TapSubscriber(destination, observerOrNext, error, complete) {\n        var _this = _super.call(this, destination) || this;\n        _this._tapNext = noop;\n        _this._tapError = noop;\n        _this._tapComplete = noop;\n        _this._tapError = error || noop;\n        _this._tapComplete = complete || noop;\n        if (isFunction(observerOrNext)) {\n            _this._context = _this;\n            _this._tapNext = observerOrNext;\n        }\n        else if (observerOrNext) {\n            _this._context = observerOrNext;\n            _this._tapNext = observerOrNext.next || noop;\n            _this._tapError = observerOrNext.error || noop;\n            _this._tapComplete = observerOrNext.complete || noop;\n        }\n        return _this;\n    }\n    TapSubscriber.prototype._next = function (value) {\n        try {\n            this._tapNext.call(this._context, value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(value);\n    };\n    TapSubscriber.prototype._error = function (err) {\n        try {\n            this._tapError.call(this._context, err);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.error(err);\n    };\n    TapSubscriber.prototype._complete = function () {\n        try {\n            this._tapComplete.call(this._context);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        return this.destination.complete();\n    };\n    return TapSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _tap,_util_EmptyError PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nfunction take(count) {\n    return function (source) {\n        if (count === 0) {\n            return empty$1();\n        }\n        else {\n            return source.lift(new TakeOperator(count));\n        }\n    };\n}\nvar TakeOperator = /*@__PURE__*/ (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\nvar TakeSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _util_ArgumentOutOfRangeError,_filter,_throwIfEmpty,_defaultIfEmpty,_take PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _observable_fromArray,_observable_scalar,_observable_empty,_observable_concat,_util_isScheduler PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar EverySubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(EverySubscriber, _super);\n    function EverySubscriber(destination, predicate, thisArg, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.source = source;\n        _this.index = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    };\n    EverySubscriber.prototype._next = function (value) {\n        var result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    };\n    EverySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return EverySubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar SwitchFirstSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SwitchFirstSubscriber, _super);\n    function SwitchFirstSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasCompleted = false;\n        _this.hasSubscription = false;\n        return _this;\n    }\n    SwitchFirstSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(subscribeToResult(this, value));\n        }\n    };\n    SwitchFirstSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */\n\nvar ExhaustMapSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(ExhaustMapSubscriber, _super);\n    function ExhaustMapSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.hasSubscription = false;\n        _this.hasCompleted = false;\n        _this.index = 0;\n        return _this;\n    }\n    ExhaustMapSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    };\n    ExhaustMapSubscriber.prototype.tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.hasSubscription = true;\n        this._innerSub(result, value, index);\n    };\n    ExhaustMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n        this.add(innerSubscriber);\n        subscribeToResult(this, result, value, index, innerSubscriber);\n    };\n    ExhaustMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    ExhaustMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    ExhaustMapSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    ExhaustMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return ExhaustMapSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar ExpandSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(ExpandSubscriber, _super);\n    function ExpandSubscriber(destination, project, concurrent, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.scheduler = scheduler;\n        _this.index = 0;\n        _this.active = 0;\n        _this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            _this.buffer = [];\n        }\n        return _this;\n    }\n    ExpandSubscriber.dispatch = function (arg) {\n        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;\n        subscriber.subscribeToProjection(result, value, index);\n    };\n    ExpandSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        var index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            var result = tryCatch(this.project)(value, index);\n            if (result === errorObject) {\n                destination.error(errorObject.e);\n            }\n            else if (!this.scheduler) {\n                this.subscribeToProjection(result, value, index);\n            }\n            else {\n                var state = { subscriber: this, result: result, value: value, index: index };\n                this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n        this.active++;\n        this.add(subscribeToResult(this, result, value, index));\n    };\n    ExpandSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._next(innerValue);\n    };\n    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return ExpandSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription PURE_IMPORTS_END */\n\nvar FinallySubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, callback) {\n        var _this = _super.call(this, destination) || this;\n        _this.add(new Subscription(callback));\n        return _this;\n    }\n    return FinallySubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar FindValueSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(FindValueSubscriber, _super);\n    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.yieldIndex = yieldIndex;\n        _this.thisArg = thisArg;\n        _this.index = 0;\n        return _this;\n    }\n    FindValueSubscriber.prototype.notifyComplete = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n        this.unsubscribe();\n    };\n    FindValueSubscriber.prototype._next = function (value) {\n        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;\n        var index = this.index++;\n        try {\n            var result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    FindValueSubscriber.prototype._complete = function () {\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\n    };\n    return FindValueSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _operators_find PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _util_EmptyError,_filter,_take,_defaultIfEmpty,_throwIfEmpty,_util_identity PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar IgnoreElementsSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(IgnoreElementsSubscriber, _super);\n    function IgnoreElementsSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    IgnoreElementsSubscriber.prototype._next = function (unused) {\n    };\n    return IgnoreElementsSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar IsEmptySubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(IsEmptySubscriber, _super);\n    function IsEmptySubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {\n        var destination = this.destination;\n        destination.next(isEmpty);\n        destination.complete();\n    };\n    IsEmptySubscriber.prototype._next = function (value) {\n        this.notifyComplete(false);\n    };\n    IsEmptySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return IsEmptySubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\n\nvar TakeLastSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(TakeLastSubscriber, _super);\n    function TakeLastSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.ring = new Array();\n        _this.count = 0;\n        return _this;\n    }\n    TakeLastSubscriber.prototype._next = function (value) {\n        var ring = this.ring;\n        var total = this.total;\n        var count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            var index = count % total;\n            ring[index] = value;\n        }\n    };\n    TakeLastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var count = this.count;\n        if (count > 0) {\n            var total = this.count >= this.total ? this.total : this.count;\n            var ring = this.ring;\n            for (var i = 0; i < total; i++) {\n                var idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    };\n    return TakeLastSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _util_EmptyError,_filter,_takeLast,_throwIfEmpty,_defaultIfEmpty,_util_identity PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar MapToSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        var _this = _super.call(this, destination) || this;\n        _this.value = value;\n        return _this;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */\n\nvar MaterializeSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(MaterializeSubscriber, _super);\n    function MaterializeSubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    MaterializeSubscriber.prototype._next = function (value) {\n        this.destination.next(Notification.createNext(value));\n    };\n    MaterializeSubscriber.prototype._error = function (err) {\n        var destination = this.destination;\n        destination.next(Notification.createError(err));\n        destination.complete();\n    };\n    MaterializeSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        destination.next(Notification.createComplete());\n        destination.complete();\n    };\n    return MaterializeSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar ScanSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this._seed = _seed;\n        _this.hasSeed = hasSeed;\n        _this.index = 0;\n        return _this;\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.hasSeed = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _observable_merge PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_util_subscribeToResult,_OuterSubscriber,_InnerSubscriber PURE_IMPORTS_END */\n\nvar MergeScanSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(MergeScanSubscriber, _super);\n    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this.acc = acc;\n        _this.concurrent = concurrent;\n        _this.hasValue = false;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeScanSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var index = this.index++;\n            var ish = tryCatch(this.accumulator)(this.acc, value);\n            var destination = this.destination;\n            if (ish === errorObject) {\n                destination.error(errorObject.e);\n            }\n            else {\n                this.active++;\n                this._innerSub(ish, value, index);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\n        var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n        this.add(innerSubscriber);\n        subscribeToResult(this, ish, value, index, innerSubscriber);\n    };\n    MergeScanSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var destination = this.destination;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    };\n    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    return MergeScanSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nvar MulticastOperator = /*@__PURE__*/ (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\n\n/** PURE_IMPORTS_START tslib,_observable_from,_util_isArray,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\n\nvar OnErrorResumeNextSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(OnErrorResumeNextSubscriber, _super);\n    function OnErrorResumeNextSubscriber(destination, nextSources) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.nextSources = nextSources;\n        return _this;\n    }\n    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._error = function (err) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._complete = function () {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {\n        var next = this.nextSources.shift();\n        if (next) {\n            var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n            this.add(innerSubscriber);\n            subscribeToResult(this, next, undefined, undefined, innerSubscriber);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return OnErrorResumeNextSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar PairwiseSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(PairwiseSubscriber, _super);\n    function PairwiseSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasPrev = false;\n        return _this;\n    }\n    PairwiseSubscriber.prototype._next = function (value) {\n        if (this.hasPrev) {\n            this.destination.next([this.prev, value]);\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n    };\n    return PairwiseSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _util_not,_filter PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _map PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _Subject,_multicast PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _BehaviorSubject,_multicast PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _AsyncSubject,_multicast PURE_IMPORTS_END */\nfunction publishLast() {\n    return function (source) { return multicast(new AsyncSubject())(source); };\n}\n\n/** PURE_IMPORTS_START _ReplaySubject,_multicast PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _util_isArray,_observable_race PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_observable_empty PURE_IMPORTS_END */\n\nvar RepeatSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(RepeatSubscriber, _super);\n    function RepeatSubscriber(destination, count, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.count = count;\n        _this.source = source;\n        return _this;\n    }\n    RepeatSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.complete.call(this);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RepeatSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar RepeatWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(RepeatWhenSubscriber, _super);\n    function RepeatWhenSubscriber(destination, notifier, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.source = source;\n        _this.sourceIsBeingSubscribedTo = true;\n        return _this;\n    }\n    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    };\n    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return _super.prototype.complete.call(this);\n        }\n    };\n    RepeatWhenSubscriber.prototype.complete = function () {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return _super.prototype.complete.call(this);\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next();\n        }\n    };\n    RepeatWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\n        var _unsubscribe = this._unsubscribe;\n        this._unsubscribe = null;\n        _super.prototype._unsubscribeAndRecycle.call(this);\n        this._unsubscribe = _unsubscribe;\n        return this;\n    };\n    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\n        this.notifications = new Subject();\n        var retries = tryCatch(this.notifier)(this.notifications);\n        if (retries === errorObject) {\n            return _super.prototype.complete.call(this);\n        }\n        this.retries = retries;\n        this.retriesSubscription = subscribeToResult(this, retries);\n    };\n    return RepeatWhenSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar RetrySubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(RetrySubscriber, _super);\n    function RetrySubscriber(destination, count, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.count = count;\n        _this.source = source;\n        return _this;\n    }\n    RetrySubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.error.call(this, err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RetrySubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar RetryWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(RetryWhenSubscriber, _super);\n    function RetryWhenSubscriber(destination, notifier, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.source = source;\n        return _this;\n    }\n    RetryWhenSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var errors = this.errors;\n            var retries = this.retries;\n            var retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject();\n                retries = tryCatch(this.notifier)(errors);\n                if (retries === errorObject) {\n                    return _super.prototype.error.call(this, errorObject.e);\n                }\n                retriesSubscription = subscribeToResult(this, retries);\n            }\n            else {\n                this.errors = null;\n                this.retriesSubscription = null;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    };\n    RetryWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _unsubscribe = this._unsubscribe;\n        this._unsubscribe = null;\n        this._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        this.source.subscribe(this);\n    };\n    return RetryWhenSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar SampleSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SampleSubscriber, _super);\n    function SampleSubscriber() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.hasValue = false;\n        return _this;\n    }\n    SampleSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n    };\n    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    };\n    return SampleSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */\n\nvar SampleTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SampleTimeSubscriber, _super);\n    function SampleTimeSubscriber(destination, period, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.period = period;\n        _this.scheduler = scheduler;\n        _this.hasValue = false;\n        _this.add(scheduler.schedule(dispatchNotification, period, { subscriber: _this, period: period }));\n        return _this;\n    }\n    SampleTimeSubscriber.prototype._next = function (value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    };\n    SampleTimeSubscriber.prototype.notifyNext = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    };\n    return SampleTimeSubscriber;\n}(Subscriber));\nfunction dispatchNotification(state) {\n    var subscriber = state.subscriber, period = state.period;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_util_tryCatch,_util_errorObject PURE_IMPORTS_END */\n\nvar SequenceEqualSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SequenceEqualSubscriber, _super);\n    function SequenceEqualSubscriber(destination, compareTo, comparor) {\n        var _this = _super.call(this, destination) || this;\n        _this.compareTo = compareTo;\n        _this.comparor = comparor;\n        _this._a = [];\n        _this._b = [];\n        _this._oneComplete = false;\n        _this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));\n        return _this;\n    }\n    SequenceEqualSubscriber.prototype._next = function (value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    };\n    SequenceEqualSubscriber.prototype._complete = function () {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    };\n    SequenceEqualSubscriber.prototype.checkValues = function () {\n        var _c = this, _a = _c._a, _b = _c._b, comparor = _c.comparor;\n        while (_a.length > 0 && _b.length > 0) {\n            var a = _a.shift();\n            var b = _b.shift();\n            var areEqual = false;\n            if (comparor) {\n                areEqual = tryCatch(comparor)(a, b);\n                if (areEqual === errorObject) {\n                    this.destination.error(errorObject.e);\n                }\n            }\n            else {\n                areEqual = a === b;\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    };\n    SequenceEqualSubscriber.prototype.emit = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    SequenceEqualSubscriber.prototype.nextB = function (value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    };\n    return SequenceEqualSubscriber;\n}(Subscriber));\nvar SequenceEqualCompareToSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SequenceEqualCompareToSubscriber, _super);\n    function SequenceEqualCompareToSubscriber(destination, parent) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        return _this;\n    }\n    SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n        this.parent.nextB(value);\n    };\n    SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n        this.parent.error(err);\n    };\n    SequenceEqualCompareToSubscriber.prototype._complete = function () {\n        this.parent._complete();\n    };\n    return SequenceEqualCompareToSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _multicast,_refCount,_Subject PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _ReplaySubject PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_util_EmptyError PURE_IMPORTS_END */\n\nvar SingleSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SingleSubscriber, _super);\n    function SingleSubscriber(destination, predicate, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.seenValue = false;\n        _this.index = 0;\n        return _this;\n    }\n    SingleSubscriber.prototype.applySingleValue = function (value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    };\n    SingleSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this.tryNext(value, index);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    };\n    SingleSubscriber.prototype.tryNext = function (value, index) {\n        try {\n            if (this.predicate(value, index, this.source)) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    SingleSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError);\n        }\n    };\n    return SingleSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar SkipSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SkipSubscriber, _super);\n    function SkipSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    SkipSubscriber.prototype._next = function (x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    };\n    return SkipSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError PURE_IMPORTS_END */\n\nvar SkipLastSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SkipLastSubscriber, _super);\n    function SkipLastSubscriber(destination, _skipCount) {\n        var _this = _super.call(this, destination) || this;\n        _this._skipCount = _skipCount;\n        _this._count = 0;\n        _this._ring = new Array(_skipCount);\n        return _this;\n    }\n    SkipLastSubscriber.prototype._next = function (value) {\n        var skipCount = this._skipCount;\n        var count = this._count++;\n        if (count < skipCount) {\n            this._ring[count] = value;\n        }\n        else {\n            var currentIndex = count % skipCount;\n            var ring = this._ring;\n            var oldValue = ring[currentIndex];\n            ring[currentIndex] = value;\n            this.destination.next(oldValue);\n        }\n    };\n    return SkipLastSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar SkipUntilSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SkipUntilSubscriber, _super);\n    function SkipUntilSubscriber(destination, notifier) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasValue = false;\n        var innerSubscriber = new InnerSubscriber(_this, undefined, undefined);\n        _this.add(innerSubscriber);\n        _this.innerSubscription = innerSubscriber;\n        subscribeToResult(_this, notifier, undefined, undefined, innerSubscriber);\n        return _this;\n    }\n    SkipUntilSubscriber.prototype._next = function (value) {\n        if (this.hasValue) {\n            _super.prototype._next.call(this, value);\n        }\n    };\n    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.hasValue = true;\n        if (this.innerSubscription) {\n            this.innerSubscription.unsubscribe();\n        }\n    };\n    SkipUntilSubscriber.prototype.notifyComplete = function () {\n    };\n    return SkipUntilSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar SkipWhileSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SkipWhileSubscriber, _super);\n    function SkipWhileSubscriber(destination, predicate) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.skipping = true;\n        _this.index = 0;\n        return _this;\n    }\n    SkipWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    };\n    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {\n        try {\n            var result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    return SkipWhileSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _observable_fromArray,_observable_scalar,_observable_empty,_observable_concat,_util_isScheduler PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */\nvar SubscribeOnObservable = /*@__PURE__*/ (function (_super) {\n    __extends(SubscribeOnObservable, _super);\n    function SubscribeOnObservable(source, delayTime, scheduler) {\n        if (delayTime === void 0) {\n            delayTime = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = asap;\n        }\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.delayTime = delayTime;\n        _this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            _this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            _this.scheduler = asap;\n        }\n        return _this;\n    }\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = asap;\n        }\n        return new SubscribeOnObservable(source, delay, scheduler);\n    };\n    SubscribeOnObservable.dispatch = function (arg) {\n        var source = arg.source, subscriber = arg.subscriber;\n        return this.add(source.subscribe(subscriber));\n    };\n    SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n        var delay = this.delayTime;\n        var source = this.source;\n        var scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source: source, subscriber: subscriber\n        });\n    };\n    return SubscribeOnObservable;\n}(Observable));\n\n/** PURE_IMPORTS_START _observable_SubscribeOnObservable PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */\nfunction switchMap(project, resultSelector) {\n    if (typeof resultSelector === 'function') {\n        return function (source) { return source.pipe(switchMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };\n    }\n    return function (source) { return source.lift(new SwitchMapOperator(project)); };\n}\nvar SwitchMapOperator = /*@__PURE__*/ (function () {\n    function SwitchMapOperator(project) {\n        this.project = project;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n    };\n    return SwitchMapOperator;\n}());\nvar SwitchMapSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.index = 0;\n        return _this;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n        this.add(innerSubscriber);\n        this.innerSubscription = subscribeToResult(this, result, value, index, innerSubscriber);\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _switchMap,_util_identity PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _switchMap PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar TakeUntilSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.seenValue = false;\n        return _this;\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.seenValue = true;\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar TakeWhileSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(TakeWhileSubscriber, _super);\n    function TakeWhileSubscriber(destination, predicate) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.index = 0;\n        return _this;\n    }\n    TakeWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        var result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    };\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n        var destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            destination.complete();\n        }\n    };\n    return TakeWhileSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\n\nvar ThrottleSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(ThrottleSubscriber, _super);\n    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.durationSelector = durationSelector;\n        _this._leading = _leading;\n        _this._trailing = _trailing;\n        _this._hasValue = false;\n        return _this;\n    }\n    ThrottleSubscriber.prototype._next = function (value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    };\n    ThrottleSubscriber.prototype.send = function () {\n        var _a = this, _hasValue = _a._hasValue, _sendValue = _a._sendValue;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = null;\n    };\n    ThrottleSubscriber.prototype.throttle = function (value) {\n        var duration = this.tryDurationSelector(value);\n        if (duration) {\n            this.add(this._throttled = subscribeToResult(this, duration));\n        }\n    };\n    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    };\n    ThrottleSubscriber.prototype.throttlingDone = function () {\n        var _a = this, _throttled = _a._throttled, _trailing = _a._trailing;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = null;\n        if (_trailing) {\n            this.send();\n        }\n    };\n    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.throttlingDone();\n    };\n    ThrottleSubscriber.prototype.notifyComplete = function () {\n        this.throttlingDone();\n    };\n    return ThrottleSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async,_throttle PURE_IMPORTS_END */\n\nvar ThrottleTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(ThrottleTimeSubscriber, _super);\n    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {\n        var _this = _super.call(this, destination) || this;\n        _this.duration = duration;\n        _this.scheduler = scheduler;\n        _this.leading = leading;\n        _this.trailing = trailing;\n        _this._hasTrailingValue = false;\n        _this._trailingValue = null;\n        return _this;\n    }\n    ThrottleTimeSubscriber.prototype._next = function (value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext$3, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n        }\n    };\n    ThrottleTimeSubscriber.prototype._complete = function () {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ThrottleTimeSubscriber.prototype.clearThrottle = function () {\n        var throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    };\n    return ThrottleTimeSubscriber;\n}(Subscriber));\nfunction dispatchNext$3(arg) {\n    var subscriber = arg.subscriber;\n    subscriber.clearThrottle();\n}\n\n/** PURE_IMPORTS_START _scheduler_async,_scan,_observable_defer,_map PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar TimeoutWithSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(TimeoutWithSubscriber, _super);\n    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.absoluteTimeout = absoluteTimeout;\n        _this.waitFor = waitFor;\n        _this.withObservable = withObservable;\n        _this.scheduler = scheduler;\n        _this.action = null;\n        _this.scheduleTimeout();\n        return _this;\n    }\n    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {\n        var withObservable = subscriber.withObservable;\n        subscriber._unsubscribeAndRecycle();\n        subscriber.add(subscribeToResult(subscriber, withObservable));\n    };\n    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {\n        var action = this.action;\n        if (action) {\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    };\n    TimeoutWithSubscriber.prototype._next = function (value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        _super.prototype._next.call(this, value);\n    };\n    TimeoutWithSubscriber.prototype._unsubscribe = function () {\n        this.action = null;\n        this.scheduler = null;\n        this.withObservable = null;\n    };\n    return TimeoutWithSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _scheduler_async,_util_TimeoutError,_timeoutWith,_observable_throwError PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _scheduler_async,_map PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar WindowSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.window = new Subject();\n        destination.next(_this.window);\n        return _this;\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow();\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this._complete();\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n    };\n    WindowSubscriber.prototype._unsubscribe = function () {\n        this.window = null;\n    };\n    WindowSubscriber.prototype.openWindow = function () {\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var destination = this.destination;\n        var newWindow = this.window = new Subject();\n        destination.next(newWindow);\n    };\n    return WindowSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */\n\nvar WindowCountSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(WindowCountSubscriber, _super);\n    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.windowSize = windowSize;\n        _this.startWindowEvery = startWindowEvery;\n        _this.windows = [new Subject()];\n        _this.count = 0;\n        destination.next(_this.windows[0]);\n        return _this;\n    }\n    WindowCountSubscriber.prototype._next = function (value) {\n        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        var destination = this.destination;\n        var windowSize = this.windowSize;\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        var c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            var window_1 = new Subject();\n            windows.push(window_1);\n            destination.next(window_1);\n        }\n    };\n    WindowCountSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    };\n    WindowCountSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowCountSubscriber.prototype._unsubscribe = function () {\n        this.count = 0;\n        this.windows = null;\n    };\n    return WindowCountSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subject,_scheduler_async,_Subscriber,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\n\nvar CountedSubject = /*@__PURE__*/ (function (_super) {\n    __extends(CountedSubject, _super);\n    function CountedSubject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._numberOfNextedValues = 0;\n        return _this;\n    }\n    CountedSubject.prototype.next = function (value) {\n        this._numberOfNextedValues++;\n        _super.prototype.next.call(this, value);\n    };\n    Object.defineProperty(CountedSubject.prototype, \"numberOfNextedValues\", {\n        get: function () {\n            return this._numberOfNextedValues;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CountedSubject;\n}(Subject));\nvar WindowTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(WindowTimeSubscriber, _super);\n    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.windowTimeSpan = windowTimeSpan;\n        _this.windowCreationInterval = windowCreationInterval;\n        _this.maxWindowSize = maxWindowSize;\n        _this.scheduler = scheduler;\n        _this.windows = [];\n        var window = _this.openWindow();\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            var closeState = { subscriber: _this, window: window, context: null };\n            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: _this, scheduler: scheduler };\n            _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            var timeSpanOnlyState = { subscriber: _this, window: window, windowTimeSpan: windowTimeSpan };\n            _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n        return _this;\n    }\n    WindowTimeSubscriber.prototype._next = function (value) {\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len; i++) {\n            var window_1 = windows[i];\n            if (!window_1.closed) {\n                window_1.next(value);\n                if (window_1.numberOfNextedValues >= this.maxWindowSize) {\n                    this.closeWindow(window_1);\n                }\n            }\n        }\n    };\n    WindowTimeSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    };\n    WindowTimeSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            var window_2 = windows.shift();\n            if (!window_2.closed) {\n                window_2.complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowTimeSubscriber.prototype.openWindow = function () {\n        var window = new CountedSubject();\n        this.windows.push(window);\n        var destination = this.destination;\n        destination.next(window);\n        return window;\n    };\n    WindowTimeSubscriber.prototype.closeWindow = function (window) {\n        window.complete();\n        var windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    };\n    return WindowTimeSubscriber;\n}(Subscriber));\nfunction dispatchWindowTimeSpanOnly(state) {\n    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;\n    if (window) {\n        subscriber.closeWindow(window);\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;\n    var window = subscriber.openWindow();\n    var action = this;\n    var context = { action: action, subscription: null };\n    var timeSpanState = { subscriber: subscriber, window: window, context: context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n    var subscriber = state.subscriber, window = state.window, context = state.context;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n\n/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar WindowToggleSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(WindowToggleSubscriber, _super);\n    function WindowToggleSubscriber(destination, openings, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.openings = openings;\n        _this.closingSelector = closingSelector;\n        _this.contexts = [];\n        _this.add(_this.openSubscription = subscribeToResult(_this, openings, openings));\n        return _this;\n    }\n    WindowToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        if (contexts) {\n            var len = contexts.length;\n            for (var i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_1 = contexts[index];\n                context_1.window.error(err);\n                context_1.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._error.call(this, err);\n    };\n    WindowToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_2 = contexts[index];\n                context_2.window.complete();\n                context_2.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    WindowToggleSubscriber.prototype._unsubscribe = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_3 = contexts[index];\n                context_3.window.unsubscribe();\n                context_3.subscription.unsubscribe();\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = tryCatch(closingSelector)(innerValue);\n            if (closingNotifier === errorObject) {\n                return this.error(errorObject.e);\n            }\n            else {\n                var window_1 = new Subject();\n                var subscription = new Subscription();\n                var context_4 = { window: window_1, subscription: subscription };\n                this.contexts.push(context_4);\n                var innerSubscription = subscribeToResult(this, closingNotifier, context_4);\n                if (innerSubscription.closed) {\n                    this.closeWindow(this.contexts.length - 1);\n                }\n                else {\n                    innerSubscription.context = context_4;\n                    subscription.add(innerSubscription);\n                }\n                this.destination.next(window_1);\n            }\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyError = function (err) {\n        this.error(err);\n    };\n    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    };\n    WindowToggleSubscriber.prototype.closeWindow = function (index) {\n        if (index === -1) {\n            return;\n        }\n        var contexts = this.contexts;\n        var context = contexts[index];\n        var window = context.window, subscription = context.subscription;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    };\n    return WindowToggleSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar WindowSubscriber$1 = /*@__PURE__*/ (function (_super) {\n    __extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.closingSelector = closingSelector;\n        _this.openWindow();\n        return _this;\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    };\n    WindowSubscriber.prototype.openWindow = function (innerSub) {\n        if (innerSub === void 0) {\n            innerSub = null;\n        }\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var window = this.window = new Subject();\n        this.destination.next(window);\n        var closingNotifier = tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject) {\n            var err = errorObject.e;\n            this.destination.error(err);\n            this.window.error(err);\n        }\n        else {\n            this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n        }\n    };\n    return WindowSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar WithLatestFromSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.observables = observables;\n        _this.project = project;\n        _this.toRespond = [];\n        var len = observables.length;\n        _this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            _this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            _this.add(subscribeToResult(_this, observable, observable, i));\n        }\n        return _this;\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\n\n/**\n * @license beatbase/ngx-stripe\n * UNLICENSED\n * Copyright © 2017 beatbase ApS, LLC. All Rights Reserved\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @record\n */\n\nvar PlatformService = /** @class */ (function () {\n    function PlatformService(platformId) {\n        this.platformId = platformId;\n    }\n    Object.defineProperty(PlatformService.prototype, \"isBrowser\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return common.isPlatformBrowser(this.platformId);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PlatformService.prototype, \"isServer\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return common.isPlatformServer(this.platformId);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformService.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    PlatformService.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [core.PLATFORM_ID,] }] }\n    ]; };\n    return PlatformService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar WindowRef = /** @class */ (function () {\n    function WindowRef(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * @return {?}\n     */\n    WindowRef.prototype.getNativeWindow = /**\n     * @return {?}\n     */\n    function () {\n        if (this._platform.isBrowser) {\n            return window;\n        }\n        return /** @type {?} */ ({});\n    };\n    WindowRef.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    WindowRef.ctorParameters = function () { return [\n        { type: PlatformService }\n    ]; };\n    return WindowRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar DocumentRef = /** @class */ (function () {\n    function DocumentRef(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * @return {?}\n     */\n    DocumentRef.prototype.getNativeDocument = /**\n     * @return {?}\n     */\n    function () {\n        if (this._platform.isBrowser) {\n            return document;\n        }\n        return /** @type {?} */ ({});\n    };\n    DocumentRef.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    DocumentRef.ctorParameters = function () { return [\n        { type: PlatformService }\n    ]; };\n    return DocumentRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @record\n */\n\nvar LazyStripeAPILoader = /** @class */ (function () {\n    function LazyStripeAPILoader(window, document, _platform) {\n        this.window = window;\n        this.document = document;\n        this._platform = _platform;\n        this.status = new BehaviorSubject({\n            error: false,\n            loaded: false,\n            loading: false\n        });\n    }\n    /**\n     * @return {?}\n     */\n    LazyStripeAPILoader.prototype.asStream = /**\n     * @return {?}\n     */\n    function () {\n        this.load();\n        return this.status.asObservable();\n    };\n    /**\n     * @return {?}\n     */\n    LazyStripeAPILoader.prototype.isReady = /**\n     * @return {?}\n     */\n    function () {\n        return this.status.getValue().loaded;\n    };\n    /**\n     * @return {?}\n     */\n    LazyStripeAPILoader.prototype.load = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._platform.isServer) {\n            return;\n        }\n        if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n            this.status.next({\n                error: false,\n                loaded: true,\n                loading: false\n            });\n        }\n        else {\n            if (!this.status.getValue().loaded && !this.status.getValue().loading) {\n                this.status.next(__assign({}, this.status.getValue(), { loading: true }));\n                /** @type {?} */\n                var script = this.document\n                    .getNativeDocument()\n                    .createElement('script');\n                script.type = 'text/javascript';\n                script.async = true;\n                script.defer = true;\n                script.src = 'https://js.stripe.com/v3/';\n                script.onload = function () {\n                    _this.status.next({\n                        error: false,\n                        loaded: true,\n                        loading: false\n                    });\n                };\n                script.onerror = function () {\n                    _this.status.next({\n                        error: true,\n                        loaded: false,\n                        loading: false\n                    });\n                };\n                this.document.getNativeDocument().body.appendChild(script);\n            }\n        }\n    };\n    LazyStripeAPILoader.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    LazyStripeAPILoader.ctorParameters = function () { return [\n        { type: WindowRef },\n        { type: DocumentRef },\n        { type: PlatformService }\n    ]; };\n    return LazyStripeAPILoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} sourceData\n * @return {?}\n */\nfunction isSourceData(sourceData) {\n    return 'type' in sourceData;\n}\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar STRIPE_PUBLISHABLE_KEY = new core.InjectionToken('Stripe Publishable Key');\n/** @type {?} */\nvar STRIPE_OPTIONS = new core.InjectionToken('Stripe Options');\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} account\n * @return {?}\n */\nfunction isBankAccount(account) {\n    return account === 'bank_account';\n}\n/**\n * @param {?} bankAccountData\n * @return {?}\n */\nfunction isBankAccountData(bankAccountData) {\n    return ('country' in bankAccountData &&\n        'currency' in bankAccountData &&\n        'routing_number' in bankAccountData &&\n        'account_number' in bankAccountData &&\n        'account_holder_name' in bankAccountData &&\n        'account_holder_type' in bankAccountData &&\n        (bankAccountData.account_holder_type === 'individual' ||\n            bankAccountData.account_holder_type === 'company'));\n}\n/**\n * @param {?} pii\n * @return {?}\n */\nfunction isPii(pii) {\n    return pii === 'pii';\n}\n/**\n * @param {?} piiData\n * @return {?}\n */\nfunction isPiiData(piiData) {\n    return 'personal_id_number' in piiData;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar StripeService = /** @class */ (function () {\n    function StripeService(key, options, loader, window, _platform) {\n        this.key = key;\n        this.options = options;\n        this.loader = loader;\n        this.window = window;\n        this._platform = _platform;\n        this.stripeChanged$ = new ReplaySubject();\n        this.stripe = /** @type {?} */ ({});\n        this.changeKey(this.key, this.options)\n            .pipe(take(1))\n            .subscribe(function () { });\n    }\n    /**\n     * @param {?} key\n     * @param {?=} options\n     * @return {?}\n     */\n    StripeService.prototype.changeKey = /**\n     * @param {?} key\n     * @param {?=} options\n     * @return {?}\n     */\n    function (key, options) {\n        var _this = this;\n        /** @type {?} */\n        var obs = this.loader.asStream().pipe(filter(function (status) { return status.loaded === true; }), map(function () {\n            if (!_this.window.getNativeWindow()) {\n                return;\n            }\n            /** @type {?} */\n            var Stripe = (/** @type {?} */ (_this.window.getNativeWindow())).Stripe;\n            _this.stripe = options\n                ? (/** @type {?} */ (Stripe(key, options)))\n                : (/** @type {?} */ (Stripe(key)));\n            _this.stripeChanged$.next(_this.stripe);\n            return _this.stripe;\n        }), publishLast(), refCount());\n        obs.subscribe();\n        return obs;\n    };\n    /**\n     * @return {?}\n     */\n    StripeService.prototype.getInstance = /**\n     * @return {?}\n     */\n    function () {\n        return this.stripe;\n    };\n    /**\n     * @param {?=} options\n     * @return {?}\n     */\n    StripeService.prototype.elements = /**\n     * @param {?=} options\n     * @return {?}\n     */\n    function (options) {\n        var _this = this;\n        return this.stripeChanged$.pipe(map(function () { return _this.stripe.elements(options); }));\n    };\n    /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n    StripeService.prototype.createToken = /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n    function (a, b) {\n        if (isBankAccount(a) && isBankAccountData(b)) {\n            return from(this.stripe.createToken(a, b));\n        }\n        else if (isPii(a) && isPiiData(b)) {\n            return from(this.stripe.createToken(a, b));\n        }\n        else {\n            return from(this.stripe.createToken(/** @type {?} */ (a), /** @type {?} */ (b)));\n        }\n    };\n    /**\n     * @param {?} a\n     * @param {?=} b\n     * @return {?}\n     */\n    StripeService.prototype.createSource = /**\n     * @param {?} a\n     * @param {?=} b\n     * @return {?}\n     */\n    function (a, b) {\n        if (isSourceData(a)) {\n            return from(this.stripe.createSource(/** @type {?} */ (a)));\n        }\n        return from(this.stripe.createSource(/** @type {?} */ (a), b));\n    };\n    /**\n     * @param {?} source\n     * @return {?}\n     */\n    StripeService.prototype.retrieveSource = /**\n     * @param {?} source\n     * @return {?}\n     */\n    function (source) {\n        return from(this.stripe.retrieveSource(source));\n    };\n    StripeService.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    StripeService.ctorParameters = function () { return [\n        { type: String, decorators: [{ type: core.Inject, args: [STRIPE_PUBLISHABLE_KEY,] }] },\n        { type: undefined, decorators: [{ type: core.Inject, args: [STRIPE_OPTIONS,] }] },\n        { type: LazyStripeAPILoader },\n        { type: WindowRef },\n        { type: PlatformService }\n    ]; };\n    return StripeService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar StripeCardComponent = /** @class */ (function () {\n    function StripeCardComponent(stripeService) {\n        this.stripeService = stripeService;\n        this.change = new core.EventEmitter();\n        this.complete = new core.EventEmitter();\n        this.error = new core.EventEmitter();\n        this.options$ = new BehaviorSubject({});\n        this.elementsOptions$ = new BehaviorSubject({});\n    }\n    Object.defineProperty(StripeCardComponent.prototype, \"options\", {\n        set: /**\n         * @param {?} optionsIn\n         * @return {?}\n         */\n        function (optionsIn) {\n            this.options$.next(optionsIn);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StripeCardComponent.prototype, \"elementsOptions\", {\n        set: /**\n         * @param {?} optionsIn\n         * @return {?}\n         */\n        function (optionsIn) {\n            this.elementsOptions$.next(optionsIn);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    StripeCardComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var elements$ = this.elementsOptions$.asObservable().pipe(switchMap(function (options) {\n            if (Object.keys(options).length > 0) {\n                return _this.stripeService.elements(options);\n            }\n            return _this.stripeService.elements();\n        }));\n        combineLatest(elements$, this.options$.asObservable().pipe(filter(function (options) { return Boolean(options); }))).subscribe(function (_a) {\n            var elements = _a[0], options = _a[1];\n            if (_this.card) {\n                _this.element = elements.create('card', options);\n                _this.element.mount(_this.card.nativeElement);\n                _this.element.on('change', function (changedCard) {\n                    _this.change.emit(/** @type {?} */ ({\n                        card: changedCard,\n                        element: _this.element\n                    }));\n                    if (changedCard.complete) {\n                        _this.complete.emit(/** @type {?} */ ({\n                            card: changedCard,\n                            element: _this.element\n                        }));\n                    }\n                    if (changedCard.error) {\n                        _this.error.emit(changedCard.error);\n                    }\n                });\n            }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    StripeCardComponent.prototype.getCard = /**\n     * @return {?}\n     */\n    function () {\n        return this.element;\n    };\n    StripeCardComponent.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'ngx-stripe-card',\n                    template: \"<div class=\\\"field\\\" #card></div>\"\n                },] },\n    ];\n    /** @nocollapse */\n    StripeCardComponent.ctorParameters = function () { return [\n        { type: StripeService }\n    ]; };\n    StripeCardComponent.propDecorators = {\n        change: [{ type: core.Output }],\n        complete: [{ type: core.Output }],\n        error: [{ type: core.Output }],\n        card: [{ type: core.ViewChild, args: ['card',] }],\n        options: [{ type: core.Input }],\n        elementsOptions: [{ type: core.Input }]\n    };\n    return StripeCardComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @record\n */\n\nvar NgxStripeModule = /** @class */ (function () {\n    function NgxStripeModule() {\n    }\n    /**\n     * @param {?} publishableKey\n     * @param {?=} options\n     * @return {?}\n     */\n    NgxStripeModule.forRoot = /**\n     * @param {?} publishableKey\n     * @param {?=} options\n     * @return {?}\n     */\n    function (publishableKey, options) {\n        return {\n            ngModule: NgxStripeModule,\n            providers: [\n                LazyStripeAPILoader,\n                StripeService,\n                PlatformService,\n                WindowRef,\n                DocumentRef,\n                {\n                    provide: STRIPE_PUBLISHABLE_KEY,\n                    useValue: publishableKey\n                },\n                {\n                    provide: STRIPE_OPTIONS,\n                    useValue: options\n                }\n            ]\n        };\n    };\n    NgxStripeModule.decorators = [\n        { type: core.NgModule, args: [{\n                    declarations: [StripeCardComponent],\n                    exports: [StripeCardComponent]\n                },] },\n    ];\n    return NgxStripeModule;\n}());\n\nexports.NgxStripeModule = NgxStripeModule;\nexports.StripeCardComponent = StripeCardComponent;\nexports.StripeService = StripeService;\nexports.LazyStripeAPILoader = LazyStripeAPILoader;\nexports.WindowRef = WindowRef;\nexports.DocumentRef = DocumentRef;\nexports.PlatformService = PlatformService;\nexports.isSourceData = isSourceData;\nexports.STRIPE_PUBLISHABLE_KEY = STRIPE_PUBLISHABLE_KEY;\nexports.STRIPE_OPTIONS = STRIPE_OPTIONS;\nexports.isBankAccount = isBankAccount;\nexports.isBankAccountData = isBankAccountData;\nexports.isPii = isPii;\nexports.isPiiData = isPiiData;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ngx-stripe.umd.js.map\n"]}